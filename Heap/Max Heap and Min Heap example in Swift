https://leetcode.com/problems/find-median-from-data-stream/discuss/1037392/swift-solution-using-cfbinaryheap-faster-than-10000

extension CFBinaryHeap {
    static func min() -> CFBinaryHeap {
        var callbacks = CFBinaryHeapCallBacks()
        callbacks.compare = { lPtr, rPtr, _ in
            let (lhs, rhs) = (lPtr!.load(as: Int.self), rPtr!.load(as: Int.self))
            return lhs == rhs ? 0 : lhs > rhs ? 1 : -1
        }
        return CFBinaryHeapCreate(nil, 0, &callbacks, nil)
    }
    
    static func max() -> CFBinaryHeap {
        var callbacks = CFBinaryHeapCallBacks()
        callbacks.compare = { lPtr, rPtr, _ in
            let (lhs, rhs) = (lPtr!.load(as: Int.self), rPtr!.load(as: Int.self))
            return lhs == rhs ? 0 : lhs > rhs ? -1 : 1
        }
        return CFBinaryHeapCreate(nil, 0, &callbacks, nil)
    }
}
