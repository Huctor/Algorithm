https://leetcode.com/problems/course-schedule/

Solution: 注意判断是否为nil, BFS只在queue取值之后，把取的值添加到result里

class Solution {
    func canFinish(_ numCourses: Int, _ prerequisites: [[Int]]) -> Bool {
        
        if prerequisites.count == 0{
            return true
        }
        
        var dic = [Int:[Int]]()
        var dicValues = [Int:[Int]]()
        var collectionNumbers = Set<Int>()
        var queue = [Int]()
        var results = [Int]()
        
        for value in prerequisites{
            let key = value[0]
            let dicValue = value[1]
            
            if !collectionNumbers.contains(key){
                collectionNumbers.insert(key)
            }
            
            if !collectionNumbers.contains(dicValue){
                collectionNumbers.insert(dicValue)
            }
            
            if !dic.keys.contains(key){
                dic[key] = [dicValue]
                
            }else{
                dic[key]!.append(dicValue)
            }
            
            if !dicValues.keys.contains(dicValue){
                dicValues[dicValue] = [key]
                
            }else{
                dicValues[dicValue]!.append(key)
            }
        }
        
        for value in collectionNumbers{
            if !dic.keys.contains(value){
                queue.append(value)
                while !queue.isEmpty{
            
                    let number = queue.removeFirst()
                    
                    if !results.contains(number){
                        results.append(number)
                        if results.count == numCourses{
                            return true
                        }
                    }
                    
                    if dicValues[number] == nil{
                        continue
                    }
                    
                    for item in dicValues[number]!{
                        
                        if dic[item]!.count == 0{
                            queue.append(item)
                            continue
                        }                        
                        
                        if dic[item]!.contains(number){
                            
                            dic[item] = dic[item]!.filter{ $0 != number}
                            
                            if dic[item]!.count == 0{
                                queue.append(item)
                            }
                                
                        }                        
                    }
            
                }
            }
        }
        
        if results.count == collectionNumbers.count{
            return true
        }
        
        return false        
        
    }
}
