https://leetcode.com/problems/reverse-linked-list/

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init() { self.val = 0; self.next = nil; }
 *     public init(_ val: Int) { self.val = val; self.next = nil; }
 *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }
 * }
 */
class Solution {
    func reverseList(_ head: ListNode?) -> ListNode? {
        
        if head == nil{
            return head
        }
        
        var inputHead = head
        
        var newHead: ListNode? = nil
        
        while inputHead != nil{
            var next = inputHead!.next
            inputHead!.next = newHead
            newHead = inputHead
            inputHead = next
        }
        
        return newHead
        
    }
}
