https://leetcode.com/problems/group-anagrams/

Solution: 利用排序后的字符串作为字典的key, 字典的值为列表

class Solution:
    def groupAnagrams(self, strs: List[str]) -> List[List[str]]:
        
        dic = {}
        
        for word in strs:
            
            wordSorted = "".join(sorted(word))
            
            if wordSorted in dic:
                dic[wordSorted].append(word)
            else:
                dic[wordSorted] = [word]
        
        return list(dic.values())

Swift solution:

class Solution {
    func groupAnagrams(_ strs: [String]) -> [[String]] {

        if strs.count == 0{
            return []
        }

        var result = [[String]]()

        if strs.count == 1{
            result.append([strs[0]])
            return result
        }

        var dic = [String: [String]]()

        for str in strs{

            var str_temp = str.sorted()
            
            if dic[String(str_temp)] == nil{
                dic[String(str_temp)] = [str]
            }else{
                dic[String(str_temp)]!.append(str)
            }
        }

        for key in dic.keys{
            result.append(dic[key]!)
        }
        
        return result
    }
}
