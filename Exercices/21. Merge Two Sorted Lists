https://leetcode.com/problems/merge-two-sorted-lists/

Solution:

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public var val: Int
 *     public var next: ListNode?
 *     public init() { self.val = 0; self.next = nil; }
 *     public init(_ val: Int) { self.val = val; self.next = nil; }
 *     public init(_ val: Int, _ next: ListNode?) { self.val = val; self.next = next; }
 * }
 */
class Solution {
    func mergeTwoLists(_ list1: ListNode?, _ list2: ListNode?) -> ListNode? {
        
        var newHead: ListNode? = ListNode(0)
        var listHead: ListNode? = nil

        listHead = newHead
        
        var mList1: ListNode? = nil
        var mList2: ListNode? = nil
        
        mList1 = list1
        mList2 = list2
        
        while (mList1 != nil) && (mList2 != nil){
            
            if mList1!.val > mList2!.val{
                listHead!.next = mList2                
                mList2 = mList2!.next
            }else{                
                listHead!.next = mList1
                mList1 = mList1!.next                
            }
            
            listHead = listHead!.next
        }
        
        while mList1 != nil{
            listHead!.next = mList1
            mList1 = mList1!.next
            listHead = listHead!.next
        }
        
        while mList2 != nil{
            listHead!.next = mList2
            mList2 = mList2!.next
            listHead = listHead!.next
        }
        
        return newHead!.next 
        
    }
}
