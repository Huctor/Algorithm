https://leetcode.com/problems/sort-colors/

Solution: https://www.youtube.com/watch?v=T8wl_tBE04E

记忆点: 通过三个指针, 分好三个区域

时间复杂度: O(n)
空间复杂度: O(1)

class Solution {
    func sortColors(_ nums: inout [Int]) {
        
        // all in [0, p0) == 0
        // all in [p0, i) == 1
        // all in (p2, length - 1] = 2
        
        var p0 = 0
        var i = 0
        var p2 = nums.count - 1
        
        while i <= p2 {
            
            if nums[i] == 0 {
                // (nums[i], nums[p0]) == (nums[p0], nums[i]) //这是错的
                nums.swapAt(i, p0)
                p0 += 1
                i += 1
            }else if nums[i] == 1 {
                i += 1
            }else {
                nums.swapAt(i, p2)
                // (nums[i], nums[p2]) = (nums[p2], nums[i]) //这是错的
                p2 -= 1
            }
        }
    }
}
