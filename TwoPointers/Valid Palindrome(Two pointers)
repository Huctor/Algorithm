https://leetcode.com/problems/valid-palindrome/

Solution:

class Solution:
    def isPalindrome(self, s: str) -> bool:
        
        if not s:
            return False
        
        left, right = 0, len(s) - 1
        
        while left < right:
            if not s[left].isalpha() and not s[left].isdigit():
                left += 1
            elif not s[right].isalpha() and not s[right].isdigit():
                right -= 1
            elif s[left].lower() == s[right].lower():
                left, right = left + 1, right - 1
            else:
                return False
            
        return True


Solution: Swift

class Solution {
    func isPalindrome(_ s: String) -> Bool {
        
        if s.count == 0{
            return false
        }
    
        var list = Array(s.filter{ $0.isNumber || $0.isLetter }.lowercased())
        var start = 0
        var end = list.count - 1
        
        while start < end{
            if list[start] == list[end]{
                start += 1
                end -= 1
                continue
            }
            
            return false
        }
        
        return true        
    }
}
