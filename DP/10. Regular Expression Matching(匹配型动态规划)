https://leetcode.com/problems/regular-expression-matching/

Solution: https://www.youtube.com/watch?v=KN22ZEpRTFY

class Solution {
    func isMatch(_ s: String, _ p: String) -> Bool {
        
        if p.count == 0{ 
            return s.count == 0
        }
        
        var sArray = Array(s)
        var pArray = Array(p)
        
        var n = sArray.count
        var m = pArray.count
        
        var dp = [[Bool]](repeating:[Bool](repeating:false, count: m + 1) , count: n + 1)

        dp[0][0] = true
        
        for i in 1...n{
            dp[i][0] = false
        }
        
        for j in 1 ... m{            
            if pArray[j - 1] == "*"{
                dp[0][j] = dp[0][j - 2]
            }
        }
        
        for i in 1 ... n{
            for j in 1 ... m{
                
                if pArray[j - 1] == "." ||  pArray[j - 1] == sArray[i - 1]{
                    dp[i][j] = dp[i - 1][j - 1]
                    
                }else if pArray[j - 1] == "*"{
                    
                    if pArray[j - 2] != "." && pArray[j - 2] != sArray[i - 1]{
                        dp[i][j] = dp[i][j - 2]
                    }else{
                        dp[i][j] = dp[i][j - 2] || dp[i][j - 1] || dp[i - 1][j]
                    }                  
                }
            }
        } 
        
        return dp[n][m]        
        
    }
}
