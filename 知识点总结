各个知识点总结:

类型 Two pointers:

1 Binary Search

数组必须是有序的并检查数组是否为空. 用数组的中间数和target比较, 比target小则在左边区域继续寻找, 比target大则在右边区域继续寻找,
若相等则返回, 否则返回不存在.

时间复杂度 O(logn)
空间复杂度 O(1)

记忆点: 一个while循环, 取中间值操作在while循环中, 因为每次while循环都要选择在左边还是在右边寻找.

2 QuickSort

首先检测数组是否为空. 一般采用数组中间数为参照值, 然后在while循环中依次移动左右两个指针, 一个从左边一直移动指针寻找到比参照值大的数(通过while循环), 
一个从右边一直移动指针寻找到比中间值小的数(通过while循环). 寻找到两个值之后交换, 并依次移动左右两个指针. 最后调用两次quicksort函数本身, 分别对数组
做半段和右半段进行quicksort排序.

时间复杂度 O(n)
空间复杂度 O(1)

记忆点: 三个while循环, 取中间值在while循环之外,每次调用函数的时候才需要取中间值, while循环内部只需要移动指针.
函数体内还需要两次再调用函数本身, 依次继续在左右半段继续排序, 直到完成.












