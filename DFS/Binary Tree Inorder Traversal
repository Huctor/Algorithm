https://leetcode.com/problems/binary-tree-inorder-traversal/

Solution:

# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def inorderTraversal(self, root: TreeNode) -> List[int]:
        
        if not root:
            return []
        
        stack, results = [], []
        
        while root:
            stack.append(root)
            root = root.left
            
        while stack:
            
            cur_note = stack.pop()
            results.append(cur_note.val)
            
            if cur_note.right:
                cur_note = cur_note.right
                while cur_note:
                    stack.append(cur_note)
                    cur_note = cur_note.left
        return results
